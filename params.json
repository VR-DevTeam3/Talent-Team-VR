{"name":"Talent Team VR","tagline":"","body":"#Our Project Youtube Video Demo:\r\nhttps://youtu.be/-zFY69xR4ZQ\r\n\r\n# Motivation:\r\n \r\nOur development team was inspired by the games available within the Google Play Store environment. One of the most popular first person games on the platform is known as Shadowgun VR. In this game you take on the perspective of a soldier in a science fiction environment, but while the environment is pretty it offers no interaction.\r\n \r\nWe were also inspired by the simple physics puzzles of classic games, such as the Portal Series. It is for this reason that we wanted to incorporate mini-physics based puzzles into our virtual environments.\r\n \r\nOverall we sought to provide a fun proof of concept that expands upon the primitive game market for the Android VR platform.\r\n \r\n \r\n \r\n# Description of Project:\r\n \r\nYou take on the role of an initiate of the formidable Talent Team, an elite organization who use supernatural talents to the benefit of mankind. You are presented with three unique scenes to test and develop your newly discovered abilities. You will begin your journey by using telekinetic abilities to assist Professor. Javier. You will then travel to the school’s soccer stadium and use a force shield to push projectiles into the mystical goal cube. Lastly his colleague Wesley will ask for some assistance in the laser chamber.\r\n \r\nTechnical Explanation of the Project ( Each Developer)\r\n \r\n## Jason Ortiz : Telekinesis\r\n \r\nTo create the effect of telekinesis, the desired models in the room were given Rigidbody components, mesh colliders, and each had the Unity standard asset script DragRidgidbody.cs, which was fine-tuned by modifying the private variables to create a more authentic “telekinesis” experience. To trigger the voice overs, scripts were written that invoked functions when the objects to be moved collided with the trigger colliders. For example, when all four books are placed on any bookshelf, which contained trigger colliders, the voice over would start. To allow the VR user to move around, the Unity standard asset “RigidBodyFPSController” was made the parent of the Google Cardboard “Cardboard Main,” so users can enter input to move while wearing the Cardboard to control their vision.\r\n\r\nResources Utilized\r\n\r\nBook Models\r\nBooks\r\nVIS Games\r\nUnity Asset Store\r\nhttps://www.assetstore.unity3d.com/en/#!/content/3356\r\n\r\nClouds Skybox\r\nSimple Cloud System\r\nPublisher: Rispat Momit\r\nUnity Asset Store\r\nhttps://www.assetstore.unity3d.com/en/#!/content/6715\r\n\r\nTeleport Pad Models\r\nCustom Teleporter Pad\r\nPublisher: Damaged Grounds\r\nhttps://www.assetstore.unity3d.com/en/#!/content/20098\r\n\r\nCrate Model\r\nCrate\r\nPublisher: Amanda3D\r\nhttps://www.assetstore.unity3d.com/en/#!/content/31462\r\n\r\nMain Screen Hangar Model\r\nExtreme Sci-Fi LITE\r\nPublisher: Aquarius Max\r\nhttps://www.assetstore.unity3d.com/en/#!/content/50727\r\n\r\nTelekinesis Room Models and Textures\r\nThe Victorian Reading Room\r\nhttps://3dwarehouse.sketchup.com/model.html?id=95c2fec87237f086bbe2cdc0eff45abb\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n## Patrick Poplawska: Force Shield\r\n \r\nThe force-shield level is fundamentally a physics sandbox that makes heavy use of colliders. The hardest challenge was modifying a script used for turret tracking and combining it with a shooting script. These scripts allow the turrets the follow the desired target (within a certain specified range) and they will then instantiate spheres that will act as the “soccer balls” of the level. The shield model proved rather tricky, and due to its unique properties it was difficult to get a consistent collision detector to behave. As a result, the collision had to primarily handled by the target of the “balls” and the “balls” themselves. The win condition is to use the force shield to slow the projectile, and then either kick it (with the shield toggle) or push it to the center cube. A set number of collisions of the cube (only projectiles will count) will cause a script to fire that will lower the north facing wall, thereby revealing your transport to the main base.\r\n \r\nResources Utilized (Force Shield):\r\n \r\nTurret: SciFi Base / Defense Tower\r\nPublisher: CGPitbull\r\nhttps://www.assetstore.unity3d.com/en/#!/content/13295\r\n \r\nConcrete Wall Textures: Yughues Free Concrete Materials\r\nPublisher: Nobiax / Yughues\r\nhttps://www.assetstore.unity3d.com/en/#!/content/12951\r\n \r\nSkybox: Sky5x One\r\nPublisher: RKD\r\nhttps://www.assetstore.unity3d.com/en/#!/content/6332\r\n \r\nShield: Sci-Fi Energy Shield\r\nPublisher: Andy Lovett\r\nhttps://www.assetstore.unity3d.com/en/#!/content/42336\r\n \r\nTeleporter: Custom Teleporter Pad Script\r\nPublisher: Damaged Grounds\r\nhttps://www.assetstore.unity3d.com/en/#!/content/20098\r\n \r\n \r\n \r\n\r\n## Brenton Lin: Laser Eyesight\r\n\r\nThe premise of this level is that the VR user is testing out their apparent laser vision, the user is placed in a corn maze like environment where they will have to find and eliminate a variety of targets (rigged with various behaviours to increase difficulty and interactivity) to open the teleporter back to the main room. There was much difficulty initially in getting laser reflection within the scene to behave properly; eventually I found a javascript for reflection and modified it for the functionality I needed. After that I was able to focus on designing the level (I could tag objects as “reflect” to interact with the laser) with interesting puzzles. \r\n    The level aesthetic was influenced by games like portal and half-life, the win condition being the destruction of all 6 spherical targets; which will spawn a teleporter back to the main room. Technical challenges included the actual representation of the laser (handled by raycast), hit detection (raycasted with influences from survival shooter tutorial scripts) and the actual placement of environmental objects and targets to make the scene both visually appealing and challenging. The laser script proved most challenging requiring heavy modification of an online script to get hit detection and reflection to work properly. I also decided to script movement and effects into the ball-targets for increased tactility. Finally, I took care in adding voice-over work (and appropriate materials to the environment) to enhance the entire experience.\r\n\r\nResources Utilized(Laser vision):\r\n\r\nConcrete wall Models and Textures:\r\nPublisher: Zombiegons\r\nhttps://www.assetstore.unity3d.com/en/#!/content/2088\r\n\r\nVarious Materials:\r\nPublisher: Integrity Software & Games\r\nhttps://www.assetstore.unity3d.com/en/#!/content/34607\r\n\r\nBall Targets\r\nPublisher: YounGen Tech\r\nhttps://www.assetstore.unity3d.com/en/#!/content/446\r\n\r\nItween Pathing Scripts:\r\nPublisher: Pixelplacement\r\nhttps://www.assetstore.unity3d.com/en/#!/content/84\r\n\r\nItween Path editor:\r\nPublisher: Pixelplacement\r\nhttp://pixelplacement.com/v2/2010/12/03/visual-editor-for-itween-motion-paths/\r\n\r\nLaser Script:\r\nPublisher: Maurice_B\r\nhttp://forum.unity3d.com/threads/free-bouncing-laser-script.286967/\r\n\r\nExplosions:\r\nPublisher: GAPH\r\nhttps://www.assetstore.unity3d.com/en/#!/content/30102\r\n\r\nSFX:\r\nPublisher: Little Robot Sound Factory\r\nhttps://www.assetstore.unity3d.com/en/#!/content/32830\r\n\r\nSky Box:\r\nPublisher: Escape Velocity;\r\nhttps://www.assetstore.unity3d.com/en/#!/content/52928\r\n\r\n# Known Problems\r\n1) The telekinesis scene works on a PC, but does not allow the VR user to pickup objects when actually wearing a HMD. We suspect this is because the `Dragrigidbody.js` script relies on using `Input.mousePosition` to calculate the distance between the mouse and the object, but there is not mouse in the Google Cardboard.\r\n2) When exiting the telekinesis scene, the game tends to crash.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}